mixin asteroid-belt
  g
    - let r = attributes.r;
    - let spread = attributes.spread;
    - let particles = attributes.particles;
    - function toRadians(angle) { return angle * (Math.PI / 180) }
    - function randn_bm(a,t,r){for(var n=0,o=0;0===n;)n=Math.random();for(;0===o;)o=Math.random();let h=Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*o);return((h=h/10+.5)>1||h<0)&&(h=randn_bm(a,t,r)),h=Math.pow(h,r),h*=t-a,h+=a};
    - var n = 0;
    - var a = 360 / particles;
    while n < particles
      - rr = randn_bm(r-spread, r+spread,1)
      - var x = Math.cos(toRadians(a*n)) * rr + attributes.cx;
      - var y = Math.sin(toRadians(a*n))  * rr + attributes.cy;
      image(x=x y=y href="assets/rocks/a_0.png" height=Math.random()*.2, width=.2, fill="white", transform="rotate(" + (Math.random()*360) + " ," + x + "," + y + ")")
      - n++;

mixin scrap-belt
  g
    - let r = attributes.r;
    - let spread = attributes.spread;
    - let particles = attributes.particles;
    - function toRadians(angle) { return angle * (Math.PI / 180) }
    - function randn_bm(a,t,r){for(var n=0,o=0;0===n;)n=Math.random();for(;0===o;)o=Math.random();let h=Math.sqrt(-2*Math.log(n))*Math.cos(2*Math.PI*o);return((h=h/10+.5)>1||h<0)&&(h=randn_bm(a,t,r)),h=Math.pow(h,r),h*=t-a,h+=a};
    - var n = 0;
    - var a = 360 / particles;
    while n < particles
      - rr = randn_bm(r-spread, r+spread,1)
      - var x = Math.cos(toRadians(a*n)) * rr + attributes.cx;
      - var y = Math.sin(toRadians(a*n))  * rr + attributes.cy;
      image(x=x y=y href="assets/spaceships/" + (Math.floor(Math.random() * Math.floor(12))+1) + ".png" height=Math.random()*.25, width=.25, fill="white", transform="rotate(" + (Math.random()*360) + " ," + x + "," + y + ")")
      - n++;
